% -----------------------------------
% Extracting and plotting geometry  
% .mat files generated by Fortran program.
% Written by Erik Jacobsson 2023-11-30
% -----------------------------------

clear; close all;

% Add path
addpath(genpath("Calfem/"))

% Load level set init
[coord,enod,nodel,ex,ey,gpx,gpy,nelm,nnod,edof_1D,axisbc,IMC_steps,...
    ngrains] = load_level_set_init();

% Mesh corners
minx = min(coord(:,1)); maxx = max(coord(:,1)); meanx = (minx+maxx)/2;
miny = min(coord(:,2)); maxy = max(coord(:,2)); meany = (miny+maxy)/2;
P1 = [minx, miny]*1e3;
P2 = [maxx, miny]*1e3;
P3 = [maxx, maxy]*1e3;
P4 = [minx, maxy]*1e3;

% Length
L = axisbc(2)-axisbc(1);

% Get colors
my_colors = get_my_colors();

% Unit conversion
mm_to_um  = 1e3;


i_IMC = 1;


% Load level set
[a,ed,vp,line_ex,line_ey,line_seg,sep_lines,ngrains,IMC_area,...
time] = load_level_set(i_IMC,edof_1D); 

% Store IMC vol/area
IMC_vol_per_area = IMC_area/L;

% Plot level set contour 
f1 = figure(1);
cla;
% plot_mesh(ex,ey)
plot([P1(1),P2(1)],[P1(2),P2(2)],'k','LineWidth',2)
hold on
plot([P2(1),P3(1)],[P2(2),P3(2)],'k','LineWidth',2)
plot([P3(1),P4(1)],[P3(2),P4(2)],'k','LineWidth',2)
plot([P4(1),P1(1)],[P4(2),P1(2)],'k','LineWidth',2)
for g = 1:ngrains
    g_cols = [2*(g-1) + 1,2*(g-1) + 2];
    plot_interface(line_ex(1:line_seg(g),g_cols),...
                   line_ey(1:line_seg(g),g_cols),'k')        
end
% Axis and title
axis equal
text(meanx*1e3,meany*1e3,'Sn')

















%% Plot functions

function plot_mesh(ex,ey)
nm_to_um  = 1e3;

% Plot mesh
patch(ex'*nm_to_um,ey'*nm_to_um,'white')
end

function plot_interface(line_ex,line_ey,color)
mm_to_um  = 1e3;

% Plot interface
plot(line_ex'*mm_to_um,line_ey'*mm_to_um,'Color',color,...
    'LineWidth',2)
end


%% Load functions

function [coord,enod,nodel,ex,ey,gpx,gpy,nelm,nnod,edof_1D,axisbc,...
    IMC_steps,ngrains] = load_level_set_init()
% --- Function for loading initial level set data ---

% Filename
s             = what('../single_study/mat_files');
file_location = s.path;
filename      = 'level_setinit.mat';
filename      = fullfile(file_location,filename);

% Load arrays
load(filename,'coord')
load(filename,'enod')
load(filename,'nodel')
load(filename,'ex')
load(filename,'ey')
load(filename,'gpx')
load(filename,'gpy')
load(filename,'IMC_steps')
load(filename,'ngrains')

% Rearrange arrays
coord            = coord';
enod             = double(enod)';
nodel            = double(nodel);
ex               = ex';
ey               = ey'; 
gpx              = gpx';
gpy              = gpy';
gpx(:,[1 2 3 4]) = gpx(:,[1 2 4 3]);
gpy(:,[1 2 3 4]) = gpy(:,[1 2 4 3]);
IMC_steps        = double(IMC_steps);
ngrains          = double(ngrains);

% Extract other properties
nelm             = size(enod,1);
nnod             = max(enod(:));
edof_1D          = zeros(nelm,nodel+1);
edof_1D(:,1)     = 1:nelm;
edof_1D(:,2:end) = enod;
axisbc           = [min(ex(:)) max(ex(:)) min(ey(:)) max(ey(:))]';
end

function [a,ed,vp,line_ex,line_ey,line_seg,sep_lines,ngrains,...
    IMC_area,time] = load_level_set(i_IMC,edof)
% --- Function for loading quantities from a level set step ---

% Filename
s             = what('../single_study/mat_files');
file_location = s.path;
filename      = ['level_set_',num2str(i_IMC),'.mat'];
filename      = fullfile(file_location,filename);

% Load arrays
load(filename,'a')
load(filename,'vpx')
load(filename,'vpy')
load(filename,'line_ex')
load(filename,'line_ey')
load(filename,'line_seg')
load(filename,'sep_lines')
load(filename,'IMC_area')
load(filename,'time')

% Rearrange arrays
line_seg  = double(line_seg);
sep_lines = double(sep_lines);


% Extract other properties
ngrains = size(a,2);
nelm    = size(edof,1);
ed      = zeros(nelm,4,ngrains);
for g=1:ngrains
    ed(:,:,g) = extract(edof,a(:,g));
end


% Construct vp field from vpx and vpy (3d array output from Fortran not
% possible)
vp        = zeros(2,4,nelm);
vp(1,:,:) = vpx;
vp(2,:,:) = vpy;

% Convert vp to cell struct 
vp1 = repmat({zeros(4,2)},nelm,1);
for ie=1:nelm
    vp1{ie} = vp(:,:,ie)';
end
vp = vp1;

end


function my_colors = get_my_colors()



% --- Function for providing a set of colors ---

my_colors = [0.8500    0.3250    0.0980
             0.9290    0.6940    0.1250
             0.0046    0.1818    0.3510
             0.6350    0.0780    0.1840
             0         0.4470    0.7410
             0.8687    0.1361    0.0760
             0.0844    0.8693    0.2399
             0.3998    0.5797    0.1233
             0.2599    0.5499    0.1839
             0.8001    0.1450    0.2400];
end