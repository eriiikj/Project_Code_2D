% -----------------------------------
% Extracting and plotting mean von Mises stress in Sn at different 
% heights from .mat files generated by whisker program.
% Written by Erik Jacobsson 2022-01-18
% -----------------------------------

close all; clc; clear

%% Import data

% Load level set init
[coord,enod,nodel,ex,ey,gpx,gpy,nelm,nnod,edof_1D,axisbc,IMC_steps,...
    ngrains] = load_level_set_init();


%% Mean stress

% Mean stress heights
mean_stress_heights = [1.4 1.6 1.8]*1e-3;
nheights            = length(mean_stress_heights);

%
vm_mean_stress_mat = zeros(IMC_steps,nheights);
tvec               = zeros(IMC_steps,1);

for i_IMC=1:IMC_steps

    disp('--------')
    disp(['IMC step ', num2str(i_IMC)])

    % Load time
    tvec(i_IMC) = get_time(i_IMC);
    
    % Load stress state
    vm = load_vmfull(i_IMC);

    for j=1:nheights

        % Height
        h = mean_stress_heights(j);
        
        % Determine elms at mean stress height
        a = ey>h;
        a = sum(a,2);
        c = (a>0) & (a<4);
        mean_stress_elms = find(c);
        
        % Mean stress at height=sum of stresses in all element gps/n.o gps
        vm_mean_stress_elms = vm(mean_stress_elms,:);
        vm_mean_stress_mat(i_IMC,j) = sum(vm_mean_stress_elms(:))/...
                                      size(vm_mean_stress_elms(:),1);
    end  
end


% Plot mean stress vs time
f1 = figure();
for h=1:nheights
    plot(tvec, vm_mean_stress_mat(:,h),'-*','LineWidth',2.0,...
         'DisplayName',['h=',num2str(mean_stress_heights(h)*1e3),' \mum'])
    hold on
end
xlabel('Time [hr]')
ylabel('\sigma_{vm} [MPa]','FontSize',12);
title('Mean von Mises Stress at Different Heights')
axis([0,tvec(end)+1,0,20])
legend
grid on


% Save figure
save_plot(f1,'vm_avg.png')


%% Functions

function [coord,enod,nodel,ex,ey,gpx,gpy,nelm,nnod,edof_1D,axisbc,...
    IMC_steps,ngrains] = load_level_set_init()
% --- Function for loading initial level set data ---

% Filename
s             = what('../single_study/mat_files');
file_location = s.path;
filename      = 'level_setinit.mat';
filename      = fullfile(file_location,filename);

% Load arrays
load(filename,'coord')
load(filename,'enod')
load(filename,'nodel')
load(filename,'ex')
load(filename,'ey')
load(filename,'gpx')
load(filename,'gpy')
load(filename,'IMC_steps')
load(filename,'ngrains')

% Rearrange arrays
coord            = coord';
enod             = double(enod)';
nodel            = double(nodel);
ex               = ex';
ey               = ey'; 
gpx              = gpx';
gpy              = gpy';
gpx(:,[1 2 3 4]) = gpx(:,[1 2 4 3]);
gpy(:,[1 2 3 4]) = gpy(:,[1 2 4 3]);
IMC_steps        = double(IMC_steps);
ngrains          = double(ngrains);

% Extract other properties
nelm             = size(enod,1);
nnod             = max(enod(:));
edof_1D          = zeros(nelm,nodel+1);
edof_1D(:,1)     = 1:nelm;
edof_1D(:,2:end) = enod;
axisbc           = [min(ex(:)) max(ex(:)) min(ey(:)) max(ey(:))]';
end

function itot = get_itot(itotold,ls,load_steps,i_IMC)

if (i_IMC==1)
    lss = ls;
else
    lss = load_steps;
end

for iload = 1:lss
    itotold = itotold + 1;
end

itot = itotold;

end

function vmfull = load_vmfull(itot)
s = what('../single_study/mat_files');
file_location = s.path;
filename = ['stress_',num2str(itot),'.mat'];
filename = fullfile(file_location,filename);
load(filename,'vm')
vmfull = vm';
end

function time = get_time(i_IMC)
s = what('../single_study/mat_files');
file_location = s.path;
filename = ['level_set_',num2str(i_IMC),'.mat'];
filename = fullfile(file_location,filename);
load(filename,'time')
end


function save_plot(fh,filename)
plotfolder= '../single_study/plots';
if ~exist(plotfolder,"dir")
    mkdir(plotfolder)
    disp(['Created new directory: ', plotfolder])
end
exportgraphics(fh,fullfile(plotfolder,filename),'Resolution',150)
end